server.js

npm install -> npm start -> palvelin käynnissä
Tämä skripti käynnistyy npm start -komennolla.

Rivi 4 -> Kansio app määritellään express -palvelimeksi.
Rivi 10 -> Cors otetaan käyttöön, helpottaa tietokannan käyttöä expressillä.
Cors kuuntelee http-pyyntöjä portilla 8081.

Rivit 24-27 -> Otetaan express-palvelimella käyttöön http-reitit, joita kontrolleri käyttää.
Rivi 30 -> Asetetaan kuuntelevaksi portiksi 8080.



/app/

/config/dbConfig.js

Exportattu vakio yhteys tietokantaan, user/password on root



/controllers/

HTTP Request kontrollerit jokaiselle tietokannan taululle.
Jokainen export-funktio lähettää vastaavan taulun modelille jotain tietoa,
jos se sitä tarvitsee. getAll() -funktio toimii tiedolla tai ilman, jos sinne viedään
tietoa niin se palauttaa vastaavat entryt taulusta, jos se kutsutaan null -muuttujalla
niin se palauttaa kyseisestä taulusta kaiken.



/models/

Funktiot tietokannan käytölle. Kontrollerilta tulee http-käsky, jonka vastaava model toteuttaa.
Esim. customerController.js -> Exports.create(kontrolleri) -> Customer.create(model)
-> "INSERT INTO Customer SET ?". Kysymysmerkin paikalle otetaan kontrollerilta modelille parametrina viety JSON-olio.

db.js

Tietokantayhteys -skripti. Tämä käyttää aiemmin tehtyä vakioyhteyttä tietokantaan,
sekä exporttaa sen jokaiselle modelille jotta niistäkin saadaan tietokantayhteys.




/routes/

Kontrolleri saa näistä skripteistä tiedon mitä tehdään.
Jos tyyppinä on router.post, niin mennään vastaavan modelin INSERT -funktioon,
.get menee SELECT -funktioon jne.

Suurin osa toimii tähän mennessä indexillä, eli jos ollaan
localhost:8080/customers niin URL:iin ei tarvitse lisätä mitään,
lähetetään vain get/post pyyntö, joka palauttaa tietokannasta entryjä.



/node_modules/

Tälle kansiolle ei tarvitse tehdä mitään.
Kansio luodaan npm install komennolla, ja se asentaa automaattisesti kaikki tarvitsemansa moduulit ja tiedostot.
Tämä on .gitignoressa koska vie tilaa github -kansiosta, joten se asennetaan aina paikallisesti ennen kuin palvelin pystytetään.