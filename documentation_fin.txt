server.js

! MySQL -palvelimen tulee olla päällä !

npm install -> npm start -> palvelin käynnissä

Kansio app määritellään express -palvelimeksi.
Cors otetaan käyttöön, helpottaa http pyyntöjä eri porttien välillä.

Kuuntelevaksi portiksi on 3001.



/app/

/config/dbConfig.js

Exportattu vakio yhteys tietokantaan, user/password on root



/controllers/

HTTP Request kontrollerit jokaiselle tietokannan taululle.
Jokainen export-funktio lähettää vastaavan taulun modelille jotain tietoa,
jos se sitä tarvitsee. getAll() -funktio toimii tiedolla tai ilman, jos sinne viedään
tietoa niin se palauttaa vastaavat entryt taulusta, jos se kutsutaan null -muuttujalla
niin se palauttaa kyseisestä taulusta kaiken.



/models/

Funktiot tietokannan käytölle. Kontrollerilta tulee http-käsky, jonka vastaava model toteuttaa.
Esim. userController.js -> Exports.create(kontrolleri) -> User.create(model)
-> "INSERT INTO User SET ?". Kysymysmerkin paikalle otetaan kontrollerilta modelille parametrina viety JSON-olio.

db.js

Tietokantayhteys -skripti. Tämä käyttää aiemmin tehtyä vakioyhteyttä tietokantaan,
sekä exporttaa sen jokaiselle modelille jotta niistäkin saadaan tietokantayhteys.



/routes/

Kontrolleri saa näistä skripteistä tiedon mitä tehdään.
Jos tyyppinä on router.post, niin mennään vastaavan modelin INSERT -funktioon,
.get menee SELECT -funktioon jne.

Suurin osa toimii tähän mennessä indexillä, eli jos ollaan
localhost:3001/restaurants niin URL:iin ei tarvitse lisätä mitään,
lähetetään vain get/post pyyntö, joka palauttaa tietokannasta entryjä.



/node_modules/

Tälle kansiolle ei tarvitse tehdä mitään.
Kansio luodaan npm install komennolla, ja se asentaa automaattisesti kaikki tarvitsemansa moduulit ja tiedostot.
Tämä on .gitignoressa koska vie tilaa github -kansiosta, joten se asennetaan aina paikallisesti ennen kuin palvelin pystytetään.